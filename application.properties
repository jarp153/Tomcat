### This file was generated!

###
### From: openl-default.properties
###
#ruleservice.publishers=RESTFUL

#ruleservice.databinding.rootClassNames =

# Object mapper setting. options: ALWAYS, NON_NULL, NON_ABSENT, NON_EMPTY, NON_DEFAULT, USE_DEFAULTS
#ruleservice.jackson.serializationInclusion = USE_DEFAULTS
# Object mapper setting. options: JAVA_LANG_OBJECT, OBJECT_AND_NON_CONCRETE, NON_CONCRETE_AND_ARRAYS, NON_FINAL, EVERYTHING, DISABLED
#ruleservice.jackson.defaultTypingMode = JAVA_LANG_OBJECT
#ruleservice.jackson.caseInsensitiveProperties = false
#ruleservice.jackson.failOnUnknownProperties = false
#ruleservice.jackson.typingPropertyName = @class
#ruleservice.jackson.simpleClassNameAsTypingPropertyValue = false
#ruleservice.jackson.defaultDateFormat = yyyy-MM-dd'T'HH:mm:ss.SSS

#ruleservice.aegis.readXsiTypes = true
#ruleservice.aegis.writeXsiTypes = true
#ruleservice.aegis.ignoreNamespaces = false

#ruleservice.http.connectionTimeout = 300000
#ruleservice.http.receiveTimeout = 300000

#ruleservice.jaxrs.responseStatusAlwaysOK = false
#ruleservice.jaxrs.swagger.prettyprint = false

#ruleservice.logging.enabled = false

#ruleservice.deployer.enabled = false

#ruleservice.kafka.bootstrap.servers = localhost:9092
#ruleservice.kafka.group.id = openl-webservice

### CORS support
#
# A list of origins that are allowed to access the resource.
# A * can be specified to enable access to resource from any origin.
# Otherwise, an allow list of comma separated origins can be provided. Eg: https://www.w3.org, https://www.example.com.
# The empty String - No origin is allowed to access the resource.
#cors.allowed.origins =
# A comma separated list of HTTP methods that can be used to access the resource, using cross-origin requests.
# These are the methods which will also be included as part of Access-Control-Allow-Methods header in pre-flight response.
# Eg: GET,POST.
#cors.allowed.methods = GET,OPTIONS,HEAD,PUT,POST
# A comma separated list of request headers that can be used when making an actual request.
# These headers will also be returned as part of Access-Control-Allow-Headers header in a pre-flight response.
# Eg: Origin,Accept.
#cors.allowed.headers = Content-Type,Accept,api_key,Authorization
# The amount of seconds, browser is allowed to cache the result of the pre-flight request.
# This will be included as part of Access-Control-Max-Age header in the pre-flight response.
# A negative value will prevent CORS Filter from adding this response header to pre-flight response.
#cors.preflight.maxage = 7200

###
### From: org.openl.rules.repository-5.25.0.jar!/openl-default.properties
###
### File-based local repository
# Repository factory ID for org.openl.rules.repository.file.LocalRepositoryFactory
#repo-file.factory=repo-file
# Location on the file system where a repository will be created.
#repo-file.uri=${openl.home}/repo
# Repository changes check interval in seconds. Must be greater than 0.
#repo-file.listener-timer-period = 10
# Used for backward compatibilities. Defines additional level of folders to separate deployments.
# Planned to be moved to Rule Services code in future.
#repo-file.support-deployments=false

### DB-based repository with connection via JDBC URL
# Repository factory ID for org.openl.rules.repository.db.JdbcDBRepositoryFactory
#repo-jdbc.factory=repo-jndi
# URL to a DataBase in 'jdbc:' scheme like jdbc:mysql://localhost:3306/repo .
#repo-jdbc.uri=jdbc:h2:${openl.home}/repository/db;AUTO_SERVER=TRUE;DB_CLOSE_DELAY=20
#repo-jdbc.login=
#repo-jdbc.password=
# Repository changes check interval in seconds. Must be greater than 0.
#repo-jdbc.listener-timer-period = 10

### DB-based repository with connection via Datasource stored in a JNDI context
# Repository factory ID for org.openl.rules.repository.db.DatasourceDBRepositoryFactory
#repo-jndi.factory=repo-jndi
# URL to a DataBase Datasource located in a JNDI context.
#repo-jndi.uri=java:comp/env/jdbc/DB
#repo-jndi.login=
#repo-jndi.password=
# Repository changes check interval in seconds. Must be greater than 0.
#repo-jndi.listener-timer-period = 10

###
### From: org.openl.rules.ruleservice-5.25.0.jar!/openl-default.properties
###
#ruleservice.openl.home = ${openl.home}

#ruleservice.isProvideRuntimeContext = true
#ruleservice.isSupportVariations = false


#ruleservice.datasource.groups =
#ruleservice.datasource.deploy.classpath.jars = false

#ruleservice.datasource.propertiesFolder =

#ruleservice.instantiation.strategy.lazy = false
#ruleservice.instantiation.strategy.maxthreadsforcompile = 3

#production-repository.factory = repo-jar
# Other repository factories:
#production-repository.factory = repo-jdbc
#production-repository.factory = repo-jndi
#production-repository.factory = repo-aws-s3
#production-repository.factory = repo-git
#production-repository.factory = repo-zip
#production-repository.factory = repo-file

#production-repository.uri =
#production-repository.login =
#production-repository.password =

### AWS S3 Specific
# A logical unit of storage in AWS object storage service. Globally unique.
#production-repository.bucket-name =
# AWS Region that is geographically close to you to optimize latency, minimize costs etc.
#production-repository.region-name =
# Alphanumeric text string that is used to identify the user who owns the account.
#production-repository.access-key =
# Plays the role of a password for a given access-key.
#production-repository.secret-key =
###

### Git Specific
# Local path for Git repository.
#production-repository.local-repository-path = ${ruleservice.openl.home}/git
# The branch where the changes will be comitted.
#production-repository.branch = master
# Prefix for automatically generated tag which will be added to every commit.
#production-repository.tag-prefix =
# Comment template for commits. Use {username} for predefined OpenL-specific Commit Type used by OpenL,
# {user-message} for meaningful message describing commit, {username} for commit author.
#production-repository.comment-template = {user-message} Author: {username}. Commit type: {commit-type}.
# Committer's display name. If null, user name will be WebStudio user name.
#production-repository.user-display-name =
# Committer's email. If null, email will be empty.
#production-repository.user-email =
# Repository connection timeout in seconds. Must be greater than zero.
#production-repository.connection-timeout = 60
###

### AWS S3 and Git Specific
# Repository changes check interval in seconds. Must be greater than 0.
#production-repository.listener-timer-period = 10
###

### Zip Specific
# The list of archive which must be available in repository
#production-repository.archives =
###
# The path in repository where Deployments are stored. Must end with "/".
#production-repository.base.path = deploy/

#System Properties
#custom.spreadsheet.type = true
#dispatching.mode = java
#dispatching.validation = false

#Filter deployments by name from datasource. Deployment names should be specified using comma separator
#Patterns can be specified using wildcard letter, for example: rule-*
#ruleservice.datasource.deployments=

###
### From: org.openl.spring-5.25.0.jar!/openl-default.properties
###
# OpenL working directory.
#openl.home = ${user.home}/.openl

# OpenL shared working directory for clustered systems.
# otherwise must match openl.home property
#openl.home.shared = ${openl.home}

# Secret key for password code/decode
#secret.key=${repository.encode.decode.key}
#secret.cipher=AES/CBC/PKCS5Padding

# Just for backward compatibility. Use secret.key instead.
#repository.encode.decode.key=

##########################################
# Don't override these properties itself
# in application level properties files!
# E.g. in application.properties
# It will not work!
#openl.config.location = ${spring.config.location: classpath*:application*-default.properties, classpath:, classpath:config/, file:, file:conf/, file:config/, file:${user.home}/}
#openl.config.name = ${spring.config.name: application.properties, application-{profile}.properties, {appName}.properties, {appName}-{profile}.properties}
##########################################

###
### From: org.openl.rules.ruleservice.rmi-5.25.0.jar!/openl-default.properties
###
#ruleservice.rmiPort = 1099
#ruleservice.rmiHost = 127.0.0.1

