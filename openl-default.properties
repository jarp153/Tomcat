ruleservice.publishers=RESTFUL

ruleservice.databinding.rootClassNames =

# Object mapper setting. options: ALWAYS, NON_NULL, NON_ABSENT, NON_EMPTY, NON_DEFAULT, USE_DEFAULTS
ruleservice.jackson.serializationInclusion = USE_DEFAULTS
# Object mapper setting. options: JAVA_LANG_OBJECT, OBJECT_AND_NON_CONCRETE, NON_CONCRETE_AND_ARRAYS, NON_FINAL, EVERYTHING, DISABLED
ruleservice.jackson.defaultTypingMode = JAVA_LANG_OBJECT
ruleservice.jackson.caseInsensitiveProperties = false
ruleservice.jackson.failOnUnknownProperties = false
ruleservice.jackson.typingPropertyName = @class
ruleservice.jackson.simpleClassNameAsTypingPropertyValue = false
ruleservice.jackson.defaultDateFormat = yyyy-MM-dd'T'HH:mm:ss.SSS

ruleservice.aegis.readXsiTypes = true
ruleservice.aegis.writeXsiTypes = true
ruleservice.aegis.ignoreNamespaces = false

ruleservice.http.connectionTimeout = 300000
ruleservice.http.receiveTimeout = 300000

ruleservice.jaxrs.responseStatusAlwaysOK = false
ruleservice.jaxrs.swagger.prettyprint = false

ruleservice.logging.enabled = false

ruleservice.deployer.enabled = false

ruleservice.kafka.bootstrap.servers = localhost:9092
ruleservice.kafka.group.id = openl-webservice

### CORS support
#
# A list of origins that are allowed to access the resource.
# A * can be specified to enable access to resource from any origin.
# Otherwise, an allow list of comma separated origins can be provided. Eg: https://www.w3.org, https://www.example.com.
# The empty String - No origin is allowed to access the resource.
cors.allowed.origins =
# A comma separated list of HTTP methods that can be used to access the resource, using cross-origin requests.
# These are the methods which will also be included as part of Access-Control-Allow-Methods header in pre-flight response.
# Eg: GET,POST.
cors.allowed.methods = GET,OPTIONS,HEAD,PUT,POST
# A comma separated list of request headers that can be used when making an actual request.
# These headers will also be returned as part of Access-Control-Allow-Headers header in a pre-flight response.
# Eg: Origin,Accept.
cors.allowed.headers = Content-Type,Accept,api_key,Authorization
# The amount of seconds, browser is allowed to cache the result of the pre-flight request.
# This will be included as part of Access-Control-Max-Age header in the pre-flight response.
# A negative value will prevent CORS Filter from adding this response header to pre-flight response.
cors.preflight.maxage = 7200
